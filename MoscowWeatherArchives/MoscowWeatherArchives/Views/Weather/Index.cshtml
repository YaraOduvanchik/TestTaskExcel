@model MoscowWeatherArchives.Controllers.PagedResult<MoscowWeatherArchives.Domain.WeatherMeasurement>

@{
    ViewData["Title"] = "Архивы погодных условий в Москве";
    int totalPages = (int)Math.Ceiling((double)Model.TotalCount / Model.PageSize);
    var monthFilter = Context.Request.Query["month"].ToString();
    var yearFilter = Context.Request.Query["year"].ToString();
}

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]</title>
    <!-- Подключение стилей Bootstrap через CDN -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>
<body>
<!-- Общий контейнер для центрирования и ограничения ширины -->
<div class="container mt-4">
    <h1 class="mb-4">Архивы погодных условий в Москве</h1>

    <!-- Форма фильтрации -->
    <div class="card mb-4">
        <div class="card-body">
            <form method="get" asp-controller="Weather" asp-action="Index" class="row g-3">
                <div class="col-md-4">
                    <label for="month" class="form-label">Месяц:</label>
                    <select id="month" name="month" class="form-select">
                        <option value="">Все</option>
                        @for (int i = 1; i <= 12; i++)
                        {
                            <option value="@i" selected="@(monthFilter == i.ToString() ? "selected" : null)">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(i)</option>
                        }
                    </select>
                </div>
                <div class="col-md-4">
                    <label for="year" class="form-label">Год:</label>
                    <input type="number" id="year" name="year" min="1900" max="2100" value="@yearFilter" class="form-control" />
                </div>
                <div class="col-md-4 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary w-100">Фильтровать</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Таблица с измерениями -->
    @if (Model.Items.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped table-bordered">
                <thead class="table-dark">
                <tr>
                    <th>Дата</th>
                    <th>Время</th>
                    <th>Температура (°C)</th>
                    <th>Влажность (%)</th>
                    <th>Точка росы (°C)</th>
                    <th>Давление (мм рт.ст.)</th>
                    <th>Направление ветра</th>
                    <th>Скорость ветра (м/с)</th>
                    <th>Облачность (%)</th>
                    <th>Высота облаков (м)</th>
                    <th>Видимость (м)</th>
                    <th>Погодные явления</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var measurement in Model.Items)
                {
                    <tr>
                        <td>@measurement.WeatherDate.Date.ToString("dd.MM.yyyy")</td>
                        <td>@measurement.Time.ToString(@"hh\:mm")</td>
                        <td>@(measurement.Temperature.HasValue ? measurement.Temperature.Value.ToString("F1") : "-")</td>
                        <td>@(measurement.RelativeHumidity.HasValue ? measurement.RelativeHumidity.ToString() : "-")</td>
                        <td>@(measurement.DewPoint.HasValue ? measurement.DewPoint.Value.ToString("F1") : "-")</td>
                        <td>@(measurement.AtmosphericPressure.HasValue ? measurement.AtmosphericPressure.ToString() : "-")</td>
                        <td>@(measurement.WindDirection ?? "-")</td>
                        <td>@(measurement.WindSpeed.HasValue ? measurement.WindSpeed.ToString() : "-")</td>
                        <td>@(measurement.Cloudiness.HasValue ? measurement.Cloudiness.ToString() : "-")</td>
                        <td>@(measurement.CloudBaseHeight.HasValue ? measurement.CloudBaseHeight.ToString() : "-")</td>
                        <td>@(measurement.VerticalVisibility.HasValue ? measurement.VerticalVisibility.ToString() : "-")</td>
                        <td>@(measurement.WeatherPhenomena ?? "-")</td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="alert alert-info" role="alert">
            Нет данных для отображения с учетом выбранных фильтров.
        </div>
    }

    <!-- Постраничная навигация -->
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (Model.HasPrevious)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.Page - 1)" asp-route-month="@monthFilter" asp-route-year="@yearFilter">
                        Предыдущая
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Предыдущая</span>
                </li>
            }
            <li class="page-item disabled">
                <span class="page-link">Страница @Model.Page из @totalPages</span>
            </li>
            @if (Model.HasNext)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.Page + 1)" asp-route-month="@monthFilter" asp-route-year="@yearFilter">
                        Следующая
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Следующая</span>
                </li>
            }
        </ul>
    </nav>
</div>
</body>
</html>